name: Rust

permissions:
  contents: read
  checks: write

on:
  push:
    branches: [ main, evmrs ]
    paths:
      - '.github/workflows/rust.yml'
      - 'rust/**'
      - Makefile
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/rust.yml'
      - 'rust/**'
      - Makefile

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: format
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: cargo fmt
      working-directory: rust
      run: cargo fmt --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo clippy
      working-directory: rust
      run: cargo hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable clippy --all-targets -- --deny warnings
    
  doc:
    name: doc
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo doc
      env:
        RUSTDOCFLAGS: "-D warnings" 
      working-directory: rust
      run: cargo hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable doc --no-deps

  build:
    name: build
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo build
      working-directory: rust
      run: cargo hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable build

  test:
    name: test
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo test
      working-directory: rust
      run: cargo hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable test
    - name: cargo test tail call elimination
      working-directory: rust
      run: cargo test --profile release --features tail-call

  test-with-sanitizers:
    name: test-with-sanitizers
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo test with address sanitizer
      working-directory: rust
      env:
        RUSTFLAGS: -Zsanitizer=address
      run: cargo +nightly hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable test -Zbuild-std --target x86_64-unknown-linux-gnu
    - name: cargo test with memory sanitizer
      working-directory: rust
      env:
        RUSTFLAGS: "-Zsanitizer=memory -Zsanitizer-memory-track-origins"
      run: cargo +nightly hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable test -Zbuild-std --target x86_64-unknown-linux-gnu
    - name: cargo test with thread sanitizer
      working-directory: rust
      env:
        CFLAGS: -fsanitize=thread
        RUSTFLAGS: -Zsanitizer=thread
      run: cargo +nightly hack --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable test -Zbuild-std --target x86_64-unknown-linux-gnu

  benchmarks-with-sanitizers:
    name: benchmarks-with-sanitizers
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo run benchmarks with address sanitizer
      working-directory: rust
      env:
        RUSTFLAGS: -Zsanitizer=address
      run: cargo +nightly hack --each-feature run -Zbuild-std --target x86_64-unknown-linux-gnu --package benchmarks --release -- 1 all-short
    - name: cargo run benchmarks with memory sanitizer
      working-directory: rust
      env:
        RUSTFLAGS: "-Zsanitizer=memory -Zsanitizer-memory-track-origins"
      run: cargo +nightly hack --each-feature run -Zbuild-std --target x86_64-unknown-linux-gnu --package benchmarks --release -- 1 all-short
    - name: cargo run benchmarks with thread sanitizer
      working-directory: rust
      env:
        CFLAGS: -fsanitize=thread
        RUSTFLAGS: -Zsanitizer=thread
      run: cargo +nightly hack --each-feature run -Zbuild-std --target x86_64-unknown-linux-gnu --package benchmarks --release -- 1 all-short

  miri:
    name: miri
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-hack
      run: cargo install cargo-hack
    - name: cargo miri test
      working-directory: rust
      env: 
        MIRIFLAGS: "-Zmiri-disable-stacked-borrows -Zmiri-permissive-provenance -Zmiri-backtrace=full"
      run: cargo +nightly hack miri test --workspace --each-feature --exclude-features needs-cache,needs-fn-ptr-conversion,needs-jumptable,mimalloc,performance
    - name: cargo miri benchmarks
      working-directory: rust
      env: 
        MIRIFLAGS: "-Zmiri-disable-stacked-borrows -Zmiri-permissive-provenance -Zmiri-backtrace=full"
      run: cargo +nightly hack miri run --package benchmarks --each-feature --exclude-features mimalloc,performance -- 1 all-short

  fuzz:
    name: fuzz
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: install rust
      uses: dtolnay/rust-toolchain@stable
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-fuzz
      run: cargo install cargo-fuzz
    - name: cargo fuzz evmc execute
      working-directory: rust
      run: cargo fuzz run --sanitizer none evmc_execute -- -max_total_time=10

  deps:
    name: unused deps
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: load cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: rust
    - name: install cargo-machete
      run: cargo install cargo-machete
    - name: cargo machete
      working-directory: rust
      run: cargo machete
