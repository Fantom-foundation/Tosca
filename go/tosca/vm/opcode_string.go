// Copyright (c) 2024 Fantom Foundation
//
// Use of this software is governed by the Business Source License included
// in the LICENSE file and at fantom.foundation/bsl11.
//
// Change Date: 2028-4-16
//
// On the date above, in accordance with the Business Source License, use of
// this software will be governed by the GNU Lesser General Public License v3.

// Code generated by "stringer -type=OpCode"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[STOP-0]
	_ = x[ADD-1]
	_ = x[MUL-2]
	_ = x[SUB-3]
	_ = x[DIV-4]
	_ = x[SDIV-5]
	_ = x[MOD-6]
	_ = x[SMOD-7]
	_ = x[ADDMOD-8]
	_ = x[MULMOD-9]
	_ = x[EXP-10]
	_ = x[SIGNEXTEND-11]
	_ = x[LT-16]
	_ = x[GT-17]
	_ = x[SLT-18]
	_ = x[SGT-19]
	_ = x[EQ-20]
	_ = x[ISZERO-21]
	_ = x[AND-22]
	_ = x[OR-23]
	_ = x[XOR-24]
	_ = x[NOT-25]
	_ = x[BYTE-26]
	_ = x[SHL-27]
	_ = x[SHR-28]
	_ = x[SAR-29]
	_ = x[SHA3-32]
	_ = x[ADDRESS-48]
	_ = x[BALANCE-49]
	_ = x[ORIGIN-50]
	_ = x[CALLER-51]
	_ = x[CALLVALUE-52]
	_ = x[CALLDATALOAD-53]
	_ = x[CALLDATASIZE-54]
	_ = x[CALLDATACOPY-55]
	_ = x[CODESIZE-56]
	_ = x[CODECOPY-57]
	_ = x[GASPRICE-58]
	_ = x[EXTCODESIZE-59]
	_ = x[EXTCODECOPY-60]
	_ = x[RETURNDATASIZE-61]
	_ = x[RETURNDATACOPY-62]
	_ = x[EXTCODEHASH-63]
	_ = x[BLOCKHASH-64]
	_ = x[COINBASE-65]
	_ = x[TIMESTAMP-66]
	_ = x[NUMBER-67]
	_ = x[PREVRANDAO-68]
	_ = x[GASLIMIT-69]
	_ = x[CHAINID-70]
	_ = x[SELFBALANCE-71]
	_ = x[BASEFEE-72]
	_ = x[BLOBHASH-73]
	_ = x[BLOBBASEFEE-74]
	_ = x[POP-80]
	_ = x[MLOAD-81]
	_ = x[MSTORE-82]
	_ = x[MSTORE8-83]
	_ = x[SLOAD-84]
	_ = x[SSTORE-85]
	_ = x[JUMP-86]
	_ = x[JUMPI-87]
	_ = x[PC-88]
	_ = x[MSIZE-89]
	_ = x[GAS-90]
	_ = x[JUMPDEST-91]
	_ = x[TLOAD-92]
	_ = x[TSTORE-93]
	_ = x[PUSH0-95]
	_ = x[MCOPY-94]
	_ = x[PUSH1-96]
	_ = x[PUSH2-97]
	_ = x[PUSH3-98]
	_ = x[PUSH4-99]
	_ = x[PUSH5-100]
	_ = x[PUSH6-101]
	_ = x[PUSH7-102]
	_ = x[PUSH8-103]
	_ = x[PUSH9-104]
	_ = x[PUSH10-105]
	_ = x[PUSH11-106]
	_ = x[PUSH12-107]
	_ = x[PUSH13-108]
	_ = x[PUSH14-109]
	_ = x[PUSH15-110]
	_ = x[PUSH16-111]
	_ = x[PUSH17-112]
	_ = x[PUSH18-113]
	_ = x[PUSH19-114]
	_ = x[PUSH20-115]
	_ = x[PUSH21-116]
	_ = x[PUSH22-117]
	_ = x[PUSH23-118]
	_ = x[PUSH24-119]
	_ = x[PUSH25-120]
	_ = x[PUSH26-121]
	_ = x[PUSH27-122]
	_ = x[PUSH28-123]
	_ = x[PUSH29-124]
	_ = x[PUSH30-125]
	_ = x[PUSH31-126]
	_ = x[PUSH32-127]
	_ = x[DUP1-128]
	_ = x[DUP2-129]
	_ = x[DUP3-130]
	_ = x[DUP4-131]
	_ = x[DUP5-132]
	_ = x[DUP6-133]
	_ = x[DUP7-134]
	_ = x[DUP8-135]
	_ = x[DUP9-136]
	_ = x[DUP10-137]
	_ = x[DUP11-138]
	_ = x[DUP12-139]
	_ = x[DUP13-140]
	_ = x[DUP14-141]
	_ = x[DUP15-142]
	_ = x[DUP16-143]
	_ = x[SWAP1-144]
	_ = x[SWAP2-145]
	_ = x[SWAP3-146]
	_ = x[SWAP4-147]
	_ = x[SWAP5-148]
	_ = x[SWAP6-149]
	_ = x[SWAP7-150]
	_ = x[SWAP8-151]
	_ = x[SWAP9-152]
	_ = x[SWAP10-153]
	_ = x[SWAP11-154]
	_ = x[SWAP12-155]
	_ = x[SWAP13-156]
	_ = x[SWAP14-157]
	_ = x[SWAP15-158]
	_ = x[SWAP16-159]
	_ = x[LOG0-160]
	_ = x[LOG1-161]
	_ = x[LOG2-162]
	_ = x[LOG3-163]
	_ = x[LOG4-164]
	_ = x[CREATE-240]
	_ = x[CALL-241]
	_ = x[CALLCODE-242]
	_ = x[RETURN-243]
	_ = x[DELEGATECALL-244]
	_ = x[CREATE2-245]
	_ = x[STATICCALL-250]
	_ = x[REVERT-253]
	_ = x[INVALID-254]
	_ = x[SELFDESTRUCT-255]
}

const (
	_OpCode_name_0 = "STOPADDMULSUBDIVSDIVMODSMODADDMODMULMODEXPSIGNEXTEND"
	_OpCode_name_1 = "LTGTSLTSGTEQISZEROANDORXORNOTBYTESHLSHRSAR"
	_OpCode_name_2 = "SHA3"
	_OpCode_name_3 = "ADDRESSBALANCEORIGINCALLERCALLVALUECALLDATALOADCALLDATASIZECALLDATACOPYCODESIZECODECOPYGASPRICEEXTCODESIZEEXTCODECOPYRETURNDATASIZERETURNDATACOPYEXTCODEHASHBLOCKHASHCOINBASETIMESTAMPNUMBERPREVRANDAOGASLIMITCHAINIDSELFBALANCEBASEFEEBLOBHASHBLOBBASEFEE"
	_OpCode_name_4 = "POPMLOADMSTOREMSTORE8SLOADSSTOREJUMPJUMPIPCMSIZEGASJUMPDESTTLOADTSTOREMCOPYPUSH0PUSH1PUSH2PUSH3PUSH4PUSH5PUSH6PUSH7PUSH8PUSH9PUSH10PUSH11PUSH12PUSH13PUSH14PUSH15PUSH16PUSH17PUSH18PUSH19PUSH20PUSH21PUSH22PUSH23PUSH24PUSH25PUSH26PUSH27PUSH28PUSH29PUSH30PUSH31PUSH32DUP1DUP2DUP3DUP4DUP5DUP6DUP7DUP8DUP9DUP10DUP11DUP12DUP13DUP14DUP15DUP16SWAP1SWAP2SWAP3SWAP4SWAP5SWAP6SWAP7SWAP8SWAP9SWAP10SWAP11SWAP12SWAP13SWAP14SWAP15SWAP16LOG0LOG1LOG2LOG3LOG4"
	_OpCode_name_5 = "CREATECALLCALLCODERETURNDELEGATECALLCREATE2"
	_OpCode_name_6 = "STATICCALL"
	_OpCode_name_7 = "REVERTINVALIDSELFDESTRUCT"
)

var (
	_OpCode_index_0 = [...]uint8{0, 4, 7, 10, 13, 16, 20, 23, 27, 33, 39, 42, 52}
	_OpCode_index_1 = [...]uint8{0, 2, 4, 7, 10, 12, 18, 21, 23, 26, 29, 33, 36, 39, 42}
	_OpCode_index_3 = [...]uint8{0, 7, 14, 20, 26, 35, 47, 59, 71, 79, 87, 95, 106, 117, 131, 145, 156, 165, 173, 182, 188, 198, 206, 213, 224, 231, 239, 250}
	_OpCode_index_4 = [...]uint16{0, 3, 8, 14, 21, 26, 32, 36, 41, 43, 48, 51, 59, 64, 70, 75, 80, 85, 90, 95, 100, 105, 110, 115, 120, 125, 131, 137, 143, 149, 155, 161, 167, 173, 179, 185, 191, 197, 203, 209, 215, 221, 227, 233, 239, 245, 251, 257, 263, 267, 271, 275, 279, 283, 287, 291, 295, 299, 304, 309, 314, 319, 324, 329, 334, 339, 344, 349, 354, 359, 364, 369, 374, 379, 385, 391, 397, 403, 409, 415, 421, 425, 429, 433, 437, 441}
	_OpCode_index_5 = [...]uint8{0, 6, 10, 18, 24, 36, 43}
	_OpCode_index_7 = [...]uint8{0, 6, 13, 25}
)

func (i OpCode) String() string {
	switch {
	case i <= 11:
		return _OpCode_name_0[_OpCode_index_0[i]:_OpCode_index_0[i+1]]
	case 16 <= i && i <= 29:
		i -= 16
		return _OpCode_name_1[_OpCode_index_1[i]:_OpCode_index_1[i+1]]
	case i == 32:
		return _OpCode_name_2
	case 48 <= i && i <= 74:
		i -= 48
		return _OpCode_name_3[_OpCode_index_3[i]:_OpCode_index_3[i+1]]
	case 80 <= i && i <= 164:
		i -= 80
		return _OpCode_name_4[_OpCode_index_4[i]:_OpCode_index_4[i+1]]
	case 240 <= i && i <= 245:
		i -= 240
		return _OpCode_name_5[_OpCode_index_5[i]:_OpCode_index_5[i+1]]
	case i == 250:
		return _OpCode_name_6
	case 253 <= i && i <= 255:
		i -= 253
		return _OpCode_name_7[_OpCode_index_7[i]:_OpCode_index_7[i+1]]
	default:
		return "OpCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
