// Code generated by MockGen. DO NOT EDIT.
// Source: host.go

// Package cti is a generated GoMock package.
package cti

import (
	reflect "reflect"

	uint256 "github.com/holiman/uint256"
	gomock "go.uber.org/mock/gomock"
)

// MockHost is a mock of Host interface.
type MockHost struct {
	ctrl     *gomock.Controller
	recorder *MockHostMockRecorder
}

// MockHostMockRecorder is the mock recorder for MockHost.
type MockHostMockRecorder struct {
	mock *MockHost
}

// NewMockHost creates a new mock instance.
func NewMockHost(ctrl *gomock.Controller) *MockHost {
	mock := &MockHost{ctrl: ctrl}
	mock.recorder = &MockHostMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHost) EXPECT() *MockHostMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockHost) Call(gasSent, address, value uint256.Int, message []byte) (bool, uint256.Int, []byte) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Call", gasSent, address, value, message)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(uint256.Int)
	ret2, _ := ret[2].([]byte)
	return ret0, ret1, ret2
}

// Call indicates an expected call of Call.
func (mr *MockHostMockRecorder) Call(gasSent, address, value, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockHost)(nil).Call), gasSent, address, value, message)
}

// GetStorage mocks base method.
func (m *MockHost) GetStorage(arg0 uint256.Int) uint256.Int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStorage", arg0)
	ret0, _ := ret[0].(uint256.Int)
	return ret0
}

// GetStorage indicates an expected call of GetStorage.
func (mr *MockHostMockRecorder) GetStorage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorage", reflect.TypeOf((*MockHost)(nil).GetStorage), arg0)
}

// SetStorage mocks base method.
func (m *MockHost) SetStorage(arg0, arg1 uint256.Int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetStorage", arg0, arg1)
}

// SetStorage indicates an expected call of SetStorage.
func (mr *MockHostMockRecorder) SetStorage(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStorage", reflect.TypeOf((*MockHost)(nil).SetStorage), arg0, arg1)
}
